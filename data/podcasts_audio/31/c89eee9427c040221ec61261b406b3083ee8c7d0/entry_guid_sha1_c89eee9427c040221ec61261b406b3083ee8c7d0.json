{
    "title": "6. 从 Portal 看生命周期管理",
    "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://pan.icu/feed",
        "value": "6. 从 Portal 看生命周期管理"
    },
    "itunes_episode": "6",
    "itunes_title": "从 Portal 看生命周期管理",
    "summary": "<p>本期吴涛和 Rio 花了相当长的时间讨论第一人称平台解谜游戏 <a href=\"http://www.thinkwithportals.com/\">Portal</a>，目的只是为了让这期节目不要被以下干燥内容独占：如何用同一套 Java/Go/C# 代码同时支持 web/Android/iOS 三大平台？如果电脑内存和硬盘合二为一的话，编程模型会有什么变化？</p>\n\n<h2>相关链接</h2>\n\n<ul>\n<li><a href=\"http://input.fontbureau.com/download/?customize&amp;fontSelection=whole&amp;a=0&amp;g=0&amp;i=0&amp;l=0&amp;zero=0&amp;asterisk=0&amp;braces=0&amp;preset=default&amp;line-height=1.2&amp;email=\">个性化定制 Input 字体</a></li>\n<li><a href=\"https://golang.org/doc/go1.4#android\">Go 1.4 正式支持 Android</a></li>\n<li><a href=\"https://groups.google.com/forum/#!searchin/golang-nuts/ios/golang-nuts/mmB2q8RqB-Y/LDog1d7ZM5kJ\">Go 1.5 计划支持 iOS</a></li>\n<li><a href=\"https://github.com/gopherjs/gopherjs\">GopherJS: Go 语言到 JavaScript 编译器</a></li>\n<li><a href=\"http://gmailblog.blogspot.com.es/2014/11/going-under-hood-of-inbox.html\">Google Inbox 如何用同一套 Java 代码同时支持 Web, Android, iOS</a></li>\n<li><a href=\"http://www.gwtproject.org\">GWT: 将 Java 编译成 JavaScript</a></li>\n<li><a href=\"http://j2objc.org\">J2ObjC: 将 Java 编译成 Objective-C</a></li>\n<li><a href=\"http://youtu.be/Y6ljFaKRTrI\">Portal 主题曲 <em>Still Alive</em></a></li>\n<li><a href=\"http://www.jonathancoulton.com/\"><em>Still Alive</em> 作者 Jonathan Coulton 的网站</a></li>\n<li><a href=\"http://www.thinkwithportals.com/comic/\">Portal 2 漫画: <em>Lab Rat</em></a> (<a href=\"http://www.thinkwithportals.com/comic/?l=zh-cn\">中文版</a>)</li>\n<li><a href=\"http://youtu.be/4drucg1A6Xk\">Portal 真人电影短片</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/GLaDOS\">Portal 大反派 GLaDOS</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Core_dump\">Core Dump</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Magnetic-core_memory\">磁芯存储器 (Magnetic-core Memory)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Wang_Laboratories\">王安电脑公司</a>创始人<a href=\"http://en.wikipedia.org/wiki/An_Wang\">王安</a></li>\n<li>「<a href=\"http://archive.wired.com/politics/law/news/1997/01/1484\">640KB 内存完全足够了？</a>」</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Computer_multitasking#Cooperative_multitasking.2Ftime-sharing\">协作式多任务</a> vs. <a href=\"http://en.wikipedia.org/wiki/Preemption_%28computing%29\">抢占式多任务</a></li>\n<li><a href=\"http://nodejs.org/\">Node.js</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Managed_code\">Managed code</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Memory_management\">Memory Management</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Data_structure_alignment\">Data Structure Alignment</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Read-only_memory\">Read-Only Memory</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Virtual_memory\">虚拟内存 (Virtual Memory)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/NTLDR\">Windows NT boot loader</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Itanium\">Intel 安腾处理器</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/X86-64\">AMD64/x86-64</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Memory_hierarchy\">内存层级 (Memory Hierarchy)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Processor_register\">寄存器 (Register)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Cache_%28computing%29\">高速缓存 (Cache)</a></li>\n<li><a href=\"https://gist.github.com/hellerbarde/2843375\">每个程序员都应该知道的访问延迟数值</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Asynchronous_I/O\">异步输入输出 (Asynchronous I/O)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Three-dimensional_integrated_circuit\">三维集成电路</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Volatile_memory\">易失存储器</a> vs. <a href=\"http://en.wikipedia.org/wiki/Non-volatile_memory\">非易失存储器</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Cold_boot_attack\">Cold Boot Attack</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Serialization\">序列化 (Serialization)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/NetBoot\">网络启动 NetBoot</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Memristor\">忆阻器 (Memristor)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Automatic_Reference_Counting\">Automatic Reference Counting</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Garbage_collection_%28computer_science%29\">Garbage Collection</a></li>\n<li><a href=\"https://golang.org/doc/go1.4#runtime\">Go 1.4 Changes to the runtime: fully precise garbage collector and concurrent garbage collector</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Memory-mapped_file\">内存映射 (Memory Mapping)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Reverse_proxy\">反向代理</a>缓存服务器 <a href=\"https://www.varnish-cache.org\">Varnish</a></li>\n<li>Varnish 架构师写的文章 <a href=\"https://www.varnish-cache.org/trac/wiki/ArchitectNotes\"><em>So what&rsquo;s wrong with 1975 programming?</em></a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Core_Data\">Core Data</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Ted_Chiang\">姜峯楠 (Ted Chiang)</a>: <a href=\"http://www.amazon.com/The-Lifecycle-Software-Objects-Chiang/dp/1596063173\"><em>The Lifecycle of Software Objects</em></a></li>\n</ul>\n\n<h2>人物简介</h2>\n\n<ul>\n<li>Rio:《<a href=\"https://itgonglun.com\">IT 公论</a>》主播，<a href=\"https://ipn.li\">IPN</a> 联合创始人，<a href=\"https://apple4us.com\">Apple4us</a> 程序员。<br />\n</li>\n<li>吴涛：<a href=\"https://typeisbeautiful.com\">Type is Beautiful</a> 程序员，《内核恐慌》主播。</li>\n</ul>",
    "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://pan.icu/feed",
        "value": "<p>本期吴涛和 Rio 花了相当长的时间讨论第一人称平台解谜游戏 <a href=\"http://www.thinkwithportals.com/\">Portal</a>，目的只是为了让这期节目不要被以下干燥内容独占：如何用同一套 Java/Go/C# 代码同时支持 web/Android/iOS 三大平台？如果电脑内存和硬盘合二为一的话，编程模型会有什么变化？</p>\n\n<h2>相关链接</h2>\n\n<ul>\n<li><a href=\"http://input.fontbureau.com/download/?customize&amp;fontSelection=whole&amp;a=0&amp;g=0&amp;i=0&amp;l=0&amp;zero=0&amp;asterisk=0&amp;braces=0&amp;preset=default&amp;line-height=1.2&amp;email=\">个性化定制 Input 字体</a></li>\n<li><a href=\"https://golang.org/doc/go1.4#android\">Go 1.4 正式支持 Android</a></li>\n<li><a href=\"https://groups.google.com/forum/#!searchin/golang-nuts/ios/golang-nuts/mmB2q8RqB-Y/LDog1d7ZM5kJ\">Go 1.5 计划支持 iOS</a></li>\n<li><a href=\"https://github.com/gopherjs/gopherjs\">GopherJS: Go 语言到 JavaScript 编译器</a></li>\n<li><a href=\"http://gmailblog.blogspot.com.es/2014/11/going-under-hood-of-inbox.html\">Google Inbox 如何用同一套 Java 代码同时支持 Web, Android, iOS</a></li>\n<li><a href=\"http://www.gwtproject.org\">GWT: 将 Java 编译成 JavaScript</a></li>\n<li><a href=\"http://j2objc.org\">J2ObjC: 将 Java 编译成 Objective-C</a></li>\n<li><a href=\"http://youtu.be/Y6ljFaKRTrI\">Portal 主题曲 <em>Still Alive</em></a></li>\n<li><a href=\"http://www.jonathancoulton.com/\"><em>Still Alive</em> 作者 Jonathan Coulton 的网站</a></li>\n<li><a href=\"http://www.thinkwithportals.com/comic/\">Portal 2 漫画: <em>Lab Rat</em></a> (<a href=\"http://www.thinkwithportals.com/comic/?l=zh-cn\">中文版</a>)</li>\n<li><a href=\"http://youtu.be/4drucg1A6Xk\">Portal 真人电影短片</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/GLaDOS\">Portal 大反派 GLaDOS</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Core_dump\">Core Dump</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Magnetic-core_memory\">磁芯存储器 (Magnetic-core Memory)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Wang_Laboratories\">王安电脑公司</a>创始人<a href=\"http://en.wikipedia.org/wiki/An_Wang\">王安</a></li>\n<li>「<a href=\"http://archive.wired.com/politics/law/news/1997/01/1484\">640KB 内存完全足够了？</a>」</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Computer_multitasking#Cooperative_multitasking.2Ftime-sharing\">协作式多任务</a> vs. <a href=\"http://en.wikipedia.org/wiki/Preemption_%28computing%29\">抢占式多任务</a></li>\n<li><a href=\"http://nodejs.org/\">Node.js</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Managed_code\">Managed code</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Memory_management\">Memory Management</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Data_structure_alignment\">Data Structure Alignment</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Read-only_memory\">Read-Only Memory</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Virtual_memory\">虚拟内存 (Virtual Memory)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/NTLDR\">Windows NT boot loader</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Itanium\">Intel 安腾处理器</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/X86-64\">AMD64/x86-64</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Memory_hierarchy\">内存层级 (Memory Hierarchy)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Processor_register\">寄存器 (Register)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Cache_%28computing%29\">高速缓存 (Cache)</a></li>\n<li><a href=\"https://gist.github.com/hellerbarde/2843375\">每个程序员都应该知道的访问延迟数值</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Asynchronous_I/O\">异步输入输出 (Asynchronous I/O)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Three-dimensional_integrated_circuit\">三维集成电路</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Volatile_memory\">易失存储器</a> vs. <a href=\"http://en.wikipedia.org/wiki/Non-volatile_memory\">非易失存储器</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Cold_boot_attack\">Cold Boot Attack</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Serialization\">序列化 (Serialization)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/NetBoot\">网络启动 NetBoot</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Memristor\">忆阻器 (Memristor)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Automatic_Reference_Counting\">Automatic Reference Counting</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Garbage_collection_%28computer_science%29\">Garbage Collection</a></li>\n<li><a href=\"https://golang.org/doc/go1.4#runtime\">Go 1.4 Changes to the runtime: fully precise garbage collector and concurrent garbage collector</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Memory-mapped_file\">内存映射 (Memory Mapping)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Reverse_proxy\">反向代理</a>缓存服务器 <a href=\"https://www.varnish-cache.org\">Varnish</a></li>\n<li>Varnish 架构师写的文章 <a href=\"https://www.varnish-cache.org/trac/wiki/ArchitectNotes\"><em>So what&rsquo;s wrong with 1975 programming?</em></a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Core_Data\">Core Data</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Ted_Chiang\">姜峯楠 (Ted Chiang)</a>: <a href=\"http://www.amazon.com/The-Lifecycle-Software-Objects-Chiang/dp/1596063173\"><em>The Lifecycle of Software Objects</em></a></li>\n</ul>\n\n<h2>人物简介</h2>\n\n<ul>\n<li>Rio:《<a href=\"https://itgonglun.com\">IT 公论</a>》主播，<a href=\"https://ipn.li\">IPN</a> 联合创始人，<a href=\"https://apple4us.com\">Apple4us</a> 程序员。<br />\n</li>\n<li>吴涛：<a href=\"https://typeisbeautiful.com\">Type is Beautiful</a> 程序员，《内核恐慌》主播。</li>\n</ul>"
    },
    "links": [
        {
            "rel": "alternate",
            "type": "text/html",
            "href": "https://pan.icu/6"
        },
        {
            "type": "audio/mpeg",
            "length": "102631762",
            "href": "https://pan.icu/6/audio.mp3",
            "rel": "enclosure"
        }
    ],
    "link": "https://pan.icu/6",
    "id": "https://pan.icu/6",
    "guidislink": false,
    "authors": [
        {
            "name": "吴涛、Rio"
        }
    ],
    "author": "吴涛、Rio",
    "author_detail": {
        "name": "吴涛、Rio"
    },
    "published": "Sun, 14 Dec 2014 07:43:38 +0000",
    "published_parsed": [
        2014,
        12,
        14,
        7,
        43,
        38,
        6,
        348,
        0
    ],
    "itunes_duration": "8542"
}